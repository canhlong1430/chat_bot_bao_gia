import pandas as pd

class ProductService:
    def __init__(self, file_path):
        self.file_path = file_path

    def find_product_detail(self, product_name):
        """
        D√≤ to√†n b·ªô sheet.
        Auto t√¨m d√≤ng header c√≥ 'S·∫£n ph·∫©m'.
        B·ªè qua HOA/th∆∞·ªùng, strip() d·∫•u c√°ch.
        T√¨m theo 'ch·ª©a' ƒë·ªÉ linh ho·∫°t h∆°n.
        """
        xls = pd.ExcelFile(self.file_path)
        keyword = product_name.lower().strip()

        for sheet in xls.sheet_names:
            print(f"üîç ƒêang d√≤ sheet: {sheet}")

            # T√¨m d√≤ng header
            preview = pd.read_excel(xls, sheet_name=sheet, header=None, nrows=10)
            header_row = None
            for idx, row in preview.iterrows():
                if row.astype(str).str.contains("S·∫£n ph·∫©m", case=False).any():
                    header_row = idx
                    break

            if header_row is None:
                continue

            df = pd.read_excel(xls, sheet_name=sheet, skiprows=header_row)
            df.columns = df.columns.map(str).str.strip()

            if 'S·∫£n ph·∫©m' not in df.columns:
                continue

            for _, row in df.iterrows():
                name = str(row['S·∫£n ph·∫©m']).lower().strip()
                if keyword in name:
                    row_data = row.to_dict()
                    row_data['sheet'] = sheet
                    print(f"‚úÖ T√¨m th·∫•y SP '{product_name}' t·∫°i sheet: {sheet}")
                    return row_data

        print(f"‚ùå Kh√¥ng t√¨m th·∫•y SP '{product_name}'")
        return None
